functionality:
  name: busco
  description: Assessment of genome assembly and annotation completeness with single copy orthologs
  info:
    keywords: [Genome assembly, quality control]
    homepage: https://busco.ezlab.org/
    documentation: https://busco.ezlab.org/busco_userguide.html
    repository: https://gitlab.com/ezlab/busco
    reference: "10.1007/978-1-4939-9173-0_14"
    licence: MIT
  argument_groups:
    - name: Inputs
      arguments:
        - name: --input
          alternatives: ["-i"]
          type: file
          description: |
            Input fasta file or directory containing input fasta files to analyse. Fasta files can either be a nucleotide or protein fasta file, depending on the BUSCO mode.
          required: true
          example: file.fasta
        - name: --mode
          alternatives: ["-m"]
          type: string
          choices: ["protein", "genome", "transcriptome"]
          required: true
          description: |
            Busco assesment mode
          example: protein
        - name: --lineage_dataset
          alternatives: ["-l"]
          type: string
          required: false
          description: |
            Specify a BUSCO lineage dataset that is most closely related to the assembly or gene set being assessed. 
            The full list of available datasets can be viewed using "busco --list-datasets".
            When unsure, the "--auto_lineage" flag can be set to automatically find the optimal lineage path.
            Requested datasets will automatically be downloaded if not already present in the download folder.
          example: stramenopiles_odb10

    - name: Outputs
      arguments:
        - name: --output_dir
          alternatives: ["-o"]
          required: true
          direction: output
          type: file
          description: |
            Path to output directory for publishing BUSCO results
          example: output
        - name: --output_prefix
          type: string
          required: false
          description: |
            Name of the analysis run, output folders and files will be labeled with this name. if not specified the output will be the input file name."
          example: busco_protein

    - name: Resource and Run Settings
      arguments:
        - name: --force
          type: boolean_true
          description: |
            Force rewriting of existing files. Must be used when output files with the provided name already exist.
        - name: --offline
          type: boolean_true
          description: |
            In offline mode BUSCO will not attempt to download files. Ensure all required dataset files are already downloaded and available.
        - name: --opt_out_run_stats
          type: boolean_true
          description: |
            Opt out of data collection (from v5.6.0). Collected data is used to improve BUSCO.
            All collected data is anonymised and includes the pipelines used, the datasets selected, options used and runtime statistics.
        - name: --quiet
          alternatives: ["-q"]
          type: boolean_true
          description: |
            Disable the info logs, displays only errors.
        - name: --restart
          alternatives: ["-r"]
          type: boolean_true
          description: |
            Continue a run that had already partially completed. Restarting skips calls to tools that have completed but performs all pre- and post-processing steps.
        - name: --tar
          type: boolean_true
          description: |
            Compress some subdirectories with many files to save space.

    - name: Download Settings
      arguments:
        - name: --download
          type: string
          required: false
          description: |
            Download dataset. Possible values are a specific dataset name, "all", "prokaryota", "eukaryota", or "virus".
        - name: --download_base_url
          type: string
          description: |
            Set the url to the remote BUSCO dataset location.
        - name: --download_path
          type: string
          description: |
            Specify filepath for storing BUSCO dataset downloads. The default is a busco_downloads subdirectory in the current working directory.

    - name: Lineage Dataset Settings
      arguments:
        - name: --auto_lineage
          type: boolean_true
          description: |
            Run auto-lineage pipelilne to automatically determine BUSCO lineage dataset that is most closely related to the assembly or gene set being assessed.
        - name: --auto_lineage_euk
          type: boolean_true
          description: |
            Run auto-placement just on eukaryota tree to find optimal lineage path.
        - name: --auto_lineage_prok
          type: boolean_true
          description: |
            Run auto_lineage just on prokaryota trees to find optimum lineage path.
        - name: --datasets_version
          type: string
          required: false
          description: |
            Specify the version of BUSCO datasets
          example: odb10

    - name: Augustus Settings
      arguments:
        - name: --augustus
          type: boolean_true
          description: |
            Use augustus gene predictor for eukaryote runs.
        - name: --augustus_parameters
          type: string
          required: false
          description: |
            Additional parameters to be passed to Augustus (see Augustus documentation: https://github.com/Gaius-Augustus/Augustus/blob/master/docs/RUNNING-AUGUSTUS.md).
            Parameters should be contained within a single string, without whitespace and seperated by commas.
          example: "--PARAM1=VALUE1,--PARAM2=VALUE2"
        - name: --augustus_species
          type: string
          required: false
          description: |
            Specify the augustus species
        - name: --long
          type: boolean_true
          description: |
            Optimize Augustus self-training mode. This adds considerably to the run time, but can improve results for some non-model organisms.

    - name: BBTools Settings
      arguments:
        - name: --contig_break
          type: integer
          default: 10
          description: |
            Number of contiguous Ns to signify a break between contigs in BBTools analysis.
        - name: --limit
          type: integer
          default: 3
          description: |
            Number of candidate regions (contig or transcript) from the BLAST output to consider per BUSCO.
            This option is only effective in pipelines using BLAST, i.e. the genome pipeline (see --augustus) or the prokaryota transcriptome pipeline.
        - name: --scaffold_composition
          type: boolean_true
          description: |
            Writes ACGTN content per scaffold to a file scaffold_composition.txt.

    - name: BLAST Settings
      arguments:
        - name: --e_value
          type: double
          default: 0.001
          description: |
            E-value cutoff for BLAST searches.

    - name: Protein Gene Prediction settings
      arguments:
        - name: --miniprot
          type: boolean_true
          description: |
            Use Miniprot gene predictor.

    - name: MetaEuk Settings
      arguments:
        - name: --metaeuk_parameters
          type: string
          description: |
            Pass additional arguments to Metaeuk for the first run (see Metaeuk documentation https://github.com/soedinglab/metaeuk).
            All parameters should be contained within a single string with no white space, with each parameter separated by a comma.
          example: "--max-overlap=15,--min-exon-aa=15"
        - name: --metaeuk_rerun_parameters
          type: string
          description: |
            Pass additional arguments to Metaeuk for the second run (see Metaeuk documentation https://github.com/soedinglab/metaeuk).
            All parameters should be contained within a single string with no white space, with each parameter separated by a comma.
          example: "--max-overlap=15,--min-exon-aa=15"

  resources:
    - type: bash_script
      path: script.sh
  test_resources:
    - type: bash_script
      path: test.sh
    - type: file
      path: test_data
platforms:
  - type: docker
    image: quay.io/biocontainers/busco:5.6.1--pyhdfd78af_0
    setup:
      - type: docker
        run: |
          busco: "$(busco --version 2>&1 | sed -n 's/BUSCO \([0-9.]*\)/\1/p')" > /var/software_versions.txt
  - type: nextflow
